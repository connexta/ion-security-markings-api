#
# Copyright (c) 2019 Connexta, LLC
#
# Released under the GNU Lesser General Public License version 3; see
# https://www.gnu.org/licenses/lgpl-3.0.html
#

openapi: 3.0.2

info:
  version: ${project.version}
  title: Security Markings API
  description: >
    The Security Markings API is defined to provide services with the ability to
    acquire and validate security markings.
  contact:
    name: Connexta
  license:
    name: GNU Lesser General Public License
    url: 'http://www.gnu.org/licenses/lgpl.html'

servers:
  - url: ${rest.server.url}

paths:
  /system/markings:
    get:
      summary: Endpoint for acquiring the system high security markings.
      description: >
        A client can use the system markings endpoint to acquire the
        system high security markings.
      operationId: systemMarkings
      tags:
        - systemMarkings
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
      responses:
        '200':
          $ref: '#/components/responses/SystemMarkingsOk'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '501':
          $ref: '#/components/responses/NotImplemented'
        'default':
          $ref: '#/components/responses/DefaultError'
  /validate:
    post:
      summary: Endpoint for validating security markings.
      description: >
        The provided security markings will be validated and
        checked against the system high markings.
      operationId: validate
      tags:
        - validate
      parameters:
        - $ref: '#/components/parameters/Accept-Version'
      requestBody:
        required: true
        description: >
          Contains the security markings to be validated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMarkingsWithOverwrites'
      responses:
        '204':
          $ref: '#/components/responses/Valid'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/InvalidMarkings'
        '501':
          $ref: '#/components/responses/NotImplemented'
        'default':
          $ref: '#/components/responses/DefaultError'

components:
  responses:
    SystemMarkingsOk:
      description: >
        The system high security markings were successfully retrieved.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityMarkings'
    Valid:
      description: >
        The security markings in the given request request were
        successfully validated.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
    InvalidMarkings:
      description: >
        The provided security markings are invalid.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidMarkings'
    Unauthorized:
      description: >
        The client could not be authenticated.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    Forbidden:
      description: >
        The client does not have permission.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    NotImplemented:
      description: >
        The requested API version is not supported and therefore not implemented.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    BadRequest:
      description: >
        The client message could not understood by the server due to invalid format or syntax.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    DefaultError:
      description: >
        Any other possible errors not currently known.
      headers:
        'Content-Version':
          $ref: '#/components/headers/ContentVersion'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
  parameters:
    Accept-Version:
      name: Accept-Version
      in: header
      description: >
        The minimal API version that a client using this API will accept
        responses from.
      required: true
      schema:
        $ref: '#/components/schemas/Version'
  headers:
    ContentVersion:
      description: >
        The API version used by the server to produce the REST message. The server will accept
        messages for any minor versions prior to this one.
      required: true
      schema:
        $ref: '#/components/schemas/Version'
      examples:
        major.minor:
          value: '1.2'
          summary: A released minor version
        major.minor.patch:
          value: '1.0.3'
          summary: A patched version
        dev:
          value: '1.2.0-SNAPSHOT'
          summary: A development version
  schemas:
    Version:
      description: Version number.
      type: string
      minLength: 3
      maxLength: 80
      pattern: '^([1-9]([0-9]+)?)\.(0|([1-9]([0-9]+)?))(\.(0|([1-9]([0-9]+)?))(-.*)?)?$'
      example: 1.2, 2.4.3, 0.2.5-SNAPSHOT
    SecurityMarking:
      description: Security marking.
      type: object
      required:
        - markingName
        - markingValue
      properties:
        markingName:
          description: Name of the security marking.
          type: string
          example: Classification
        markingValue:
          description: Value of the security marking.
          type: string
          example: U
    SecurityMarkings:
      description: Security markings.
      type: array
      items:
        $ref: '#/components/schemas/SecurityMarking'
    SecurityMarkingsWithOverwrites:
      description: Security markings and overwriting security markings.
      type: object
      required:
        - securityMarkings
      properties:
        securityMarkings:
          $ref: '#/components/schemas/SecurityMarkings'
        overwriteMarkings:
          $ref: '#/components/schemas/SecurityMarkings'
    ErrorMessage:
      description: Error message information.
      type: object
      required:
        - timestamp
        - path
        - status
        - error
        - message
      properties:
        timestamp:
          type: string
          format: date-time
          description: The server time when the error was generated.
          example: 2019-05-09T14:47:13.101+0000
        path:
          type: string
          description: The path for the REST request that generated this error.
          example: /system/markings
        status:
          type: integer
          format: int32
          description: The corresponding HTTP status code.
          example: 500
        code:
          type: integer
          format: int32
          description: >
            An optional more specific code corresponding to the error (specific codes need to be
            documented).
          example: 0
        error:
          type: string
          description: The corresponding HTTP reason phrase.
          minLength: 1
          example: Bad Request
        message:
          type: string
          description: Specific information about the error.
          minLength: 1
          example: Security markings validation failed.
        details:
          type: array
          items:
            type: string
          description: Optional detailed information about the error.
          example: [
            Security markings not provided.,
            Provided markings were not compatible with system high markings.
          ]
    InvalidMarking:
      description: Invalid security marking.
      type: object
      required:
        - markingName
        - markingValue
        - failure
      properties:
        markingName:
          description: Name of the invalid security marking.
          type: string
          example: Classification
        markingValue:
          description: Value of the invalid security marking.
          type: string
          example: S
        failure:
          description: Cause of invalidation.
          type: string
          example: Provided classification (S) is higher than the system high classification (U).
    InvalidMarkings:
      description: Invalid security markings.
      type: object
      required:
        - errorMessage
        - invalidMarkings
      properties:
        errorMessage:
          $ref: '#/components/schemas/ErrorMessage'
        invalidMarkings:
          type: array
          items:
            $ref: '#/components/schemas/InvalidMarking'
